import { db } from './db';
import * as schema from '@shared/schema';
import { storage } from './storage';

async function runMigration() {
  console.log('üîÑ Iniciando migra√ß√£o do banco de dados...');

  try {
    // Criar tabelas
    console.log('üìã Criando tabelas...');
    
    // Usu√°rios
    await db.execute(`
      CREATE TABLE IF NOT EXISTS "users" (
        "id" SERIAL PRIMARY KEY,
        "username" TEXT NOT NULL UNIQUE,
        "password" TEXT NOT NULL,
        "name" TEXT NOT NULL,
        "email" TEXT NOT NULL UNIQUE,
        "role" TEXT NOT NULL DEFAULT 'user',
        "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL
      )
    `);
    console.log('‚úÖ Tabela "users" criada com sucesso');

    // Projetos
    await db.execute(`
      CREATE TABLE IF NOT EXISTS "projects" (
        "id" SERIAL PRIMARY KEY,
        "title" TEXT NOT NULL,
        "description" TEXT NOT NULL,
        "category" TEXT NOT NULL,
        "technologies" TEXT[] NOT NULL,
        "image" TEXT NOT NULL,
        "featured" BOOLEAN DEFAULT FALSE,
        "order" INTEGER DEFAULT 0,
        "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL
      )
    `);
    console.log('‚úÖ Tabela "projects" criada com sucesso');

    // Servi√ßos
    await db.execute(`
      CREATE TABLE IF NOT EXISTS "services" (
        "id" SERIAL PRIMARY KEY,
        "title" TEXT NOT NULL,
        "description" TEXT NOT NULL,
        "icon" TEXT NOT NULL,
        "price" NUMERIC(10, 2) NOT NULL,
        "order" INTEGER DEFAULT 0,
        "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL
      )
    `);
    console.log('‚úÖ Tabela "services" criada com sucesso');

    // Depoimentos
    await db.execute(`
      CREATE TABLE IF NOT EXISTS "testimonials" (
        "id" SERIAL PRIMARY KEY,
        "name" TEXT NOT NULL,
        "position" TEXT NOT NULL,
        "company" TEXT NOT NULL,
        "message" TEXT NOT NULL,
        "avatar" TEXT NOT NULL,
        "rating" INTEGER NOT NULL,
        "order" INTEGER DEFAULT 0,
        "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL
      )
    `);
    console.log('‚úÖ Tabela "testimonials" criada com sucesso');

    // Mensagens
    await db.execute(`
      CREATE TABLE IF NOT EXISTS "messages" (
        "id" SERIAL PRIMARY KEY,
        "content" TEXT NOT NULL,
        "sender_id" INTEGER,
        "receiver_id" INTEGER,
        "is_admin" BOOLEAN DEFAULT FALSE,
        "read" BOOLEAN DEFAULT FALSE,
        "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL
      )
    `);
    console.log('‚úÖ Tabela "messages" criada com sucesso');

    // Contatos
    await db.execute(`
      CREATE TABLE IF NOT EXISTS "contacts" (
        "id" SERIAL PRIMARY KEY,
        "name" TEXT NOT NULL,
        "email" TEXT NOT NULL,
        "phone" TEXT,
        "subject" TEXT NOT NULL,
        "message" TEXT NOT NULL,
        "read" BOOLEAN DEFAULT FALSE,
        "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL
      )
    `);
    console.log('‚úÖ Tabela "contacts" criada com sucesso');

    // Configura√ß√µes do site
    await db.execute(`
      CREATE TABLE IF NOT EXISTS "site_settings" (
        "id" SERIAL PRIMARY KEY,
        "site_name" TEXT NOT NULL DEFAULT 'SeuCodigo',
        "site_title" TEXT NOT NULL DEFAULT 'Solu√ß√µes em desenvolvimento web e mobile para elevar seu neg√≥cio ao pr√≥ximo n√≠vel.',
        "contact_email" TEXT NOT NULL DEFAULT 'contato@seucodigo.com',
        "contact_phone" TEXT DEFAULT '(11) 9999-8888',
        "address" TEXT DEFAULT 'Av. Paulista, 1000, S√£o Paulo - SP',
        "logo" TEXT DEFAULT '',
        "github" TEXT DEFAULT '',
        "linkedin" TEXT DEFAULT '',
        "twitter" TEXT DEFAULT '',
        "instagram" TEXT DEFAULT '',
        "whatsapp" TEXT DEFAULT '',
        "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL
      )
    `);
    console.log('‚úÖ Tabela "site_settings" criada com sucesso');

    // Inicializar dados padr√£o
    await storage.seedInitialData();
    console.log('‚úÖ Dados iniciais inseridos com sucesso');

    console.log('‚úÖ Migra√ß√£o conclu√≠da com sucesso!');
  } catch (error) {
    console.error('‚ùå Erro durante a migra√ß√£o:', error);
    throw error;
  }
}

runMigration().catch(console.error);